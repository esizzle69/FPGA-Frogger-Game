--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 17.0 cbx_cycloneii 2017:04:19:09:17:27:SJ cbx_lpm_add_sub 2017:04:19:09:17:27:SJ cbx_lpm_compare 2017:04:19:09:17:27:SJ cbx_lpm_decode 2017:04:19:09:17:27:SJ cbx_mgl 2017:04:19:10:26:36:SJ cbx_nadder 2017:04:19:09:17:27:SJ cbx_stratix 2017:04:19:09:17:27:SJ cbx_stratixii 2017:04:19:09:17:27:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_sma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1000w[2..0]	: WIRE;
	w_anode1009w[3..0]	: WIRE;
	w_anode1020w[3..0]	: WIRE;
	w_anode1030w[3..0]	: WIRE;
	w_anode1040w[3..0]	: WIRE;
	w_anode1050w[3..0]	: WIRE;
	w_anode1060w[3..0]	: WIRE;
	w_anode1070w[3..0]	: WIRE;
	w_anode1080w[3..0]	: WIRE;
	w_anode716w[2..0]	: WIRE;
	w_anode729w[3..0]	: WIRE;
	w_anode746w[3..0]	: WIRE;
	w_anode756w[3..0]	: WIRE;
	w_anode766w[3..0]	: WIRE;
	w_anode776w[3..0]	: WIRE;
	w_anode786w[3..0]	: WIRE;
	w_anode796w[3..0]	: WIRE;
	w_anode806w[3..0]	: WIRE;
	w_anode818w[2..0]	: WIRE;
	w_anode827w[3..0]	: WIRE;
	w_anode838w[3..0]	: WIRE;
	w_anode848w[3..0]	: WIRE;
	w_anode858w[3..0]	: WIRE;
	w_anode868w[3..0]	: WIRE;
	w_anode878w[3..0]	: WIRE;
	w_anode888w[3..0]	: WIRE;
	w_anode898w[3..0]	: WIRE;
	w_anode909w[2..0]	: WIRE;
	w_anode918w[3..0]	: WIRE;
	w_anode929w[3..0]	: WIRE;
	w_anode939w[3..0]	: WIRE;
	w_anode949w[3..0]	: WIRE;
	w_anode959w[3..0]	: WIRE;
	w_anode969w[3..0]	: WIRE;
	w_anode979w[3..0]	: WIRE;
	w_anode989w[3..0]	: WIRE;
	w_data714w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode1080w[3..3], w_anode1070w[3..3], w_anode1060w[3..3], w_anode1050w[3..3], w_anode1040w[3..3], w_anode1030w[3..3], w_anode1020w[3..3], w_anode1009w[3..3]), ( w_anode989w[3..3], w_anode979w[3..3], w_anode969w[3..3], w_anode959w[3..3], w_anode949w[3..3], w_anode939w[3..3], w_anode929w[3..3], w_anode918w[3..3]), ( w_anode898w[3..3], w_anode888w[3..3], w_anode878w[3..3], w_anode868w[3..3], w_anode858w[3..3], w_anode848w[3..3], w_anode838w[3..3], w_anode827w[3..3]), ( w_anode806w[3..3], w_anode796w[3..3], w_anode786w[3..3], w_anode776w[3..3], w_anode766w[3..3], w_anode756w[3..3], w_anode746w[3..3], w_anode729w[3..3]));
	w_anode1000w[] = ( (w_anode1000w[1..1] & data_wire[4..4]), (w_anode1000w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1009w[] = ( (w_anode1009w[2..2] & (! w_data714w[2..2])), (w_anode1009w[1..1] & (! w_data714w[1..1])), (w_anode1009w[0..0] & (! w_data714w[0..0])), w_anode1000w[2..2]);
	w_anode1020w[] = ( (w_anode1020w[2..2] & (! w_data714w[2..2])), (w_anode1020w[1..1] & (! w_data714w[1..1])), (w_anode1020w[0..0] & w_data714w[0..0]), w_anode1000w[2..2]);
	w_anode1030w[] = ( (w_anode1030w[2..2] & (! w_data714w[2..2])), (w_anode1030w[1..1] & w_data714w[1..1]), (w_anode1030w[0..0] & (! w_data714w[0..0])), w_anode1000w[2..2]);
	w_anode1040w[] = ( (w_anode1040w[2..2] & (! w_data714w[2..2])), (w_anode1040w[1..1] & w_data714w[1..1]), (w_anode1040w[0..0] & w_data714w[0..0]), w_anode1000w[2..2]);
	w_anode1050w[] = ( (w_anode1050w[2..2] & w_data714w[2..2]), (w_anode1050w[1..1] & (! w_data714w[1..1])), (w_anode1050w[0..0] & (! w_data714w[0..0])), w_anode1000w[2..2]);
	w_anode1060w[] = ( (w_anode1060w[2..2] & w_data714w[2..2]), (w_anode1060w[1..1] & (! w_data714w[1..1])), (w_anode1060w[0..0] & w_data714w[0..0]), w_anode1000w[2..2]);
	w_anode1070w[] = ( (w_anode1070w[2..2] & w_data714w[2..2]), (w_anode1070w[1..1] & w_data714w[1..1]), (w_anode1070w[0..0] & (! w_data714w[0..0])), w_anode1000w[2..2]);
	w_anode1080w[] = ( (w_anode1080w[2..2] & w_data714w[2..2]), (w_anode1080w[1..1] & w_data714w[1..1]), (w_anode1080w[0..0] & w_data714w[0..0]), w_anode1000w[2..2]);
	w_anode716w[] = ( (w_anode716w[1..1] & (! data_wire[4..4])), (w_anode716w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode729w[] = ( (w_anode729w[2..2] & (! w_data714w[2..2])), (w_anode729w[1..1] & (! w_data714w[1..1])), (w_anode729w[0..0] & (! w_data714w[0..0])), w_anode716w[2..2]);
	w_anode746w[] = ( (w_anode746w[2..2] & (! w_data714w[2..2])), (w_anode746w[1..1] & (! w_data714w[1..1])), (w_anode746w[0..0] & w_data714w[0..0]), w_anode716w[2..2]);
	w_anode756w[] = ( (w_anode756w[2..2] & (! w_data714w[2..2])), (w_anode756w[1..1] & w_data714w[1..1]), (w_anode756w[0..0] & (! w_data714w[0..0])), w_anode716w[2..2]);
	w_anode766w[] = ( (w_anode766w[2..2] & (! w_data714w[2..2])), (w_anode766w[1..1] & w_data714w[1..1]), (w_anode766w[0..0] & w_data714w[0..0]), w_anode716w[2..2]);
	w_anode776w[] = ( (w_anode776w[2..2] & w_data714w[2..2]), (w_anode776w[1..1] & (! w_data714w[1..1])), (w_anode776w[0..0] & (! w_data714w[0..0])), w_anode716w[2..2]);
	w_anode786w[] = ( (w_anode786w[2..2] & w_data714w[2..2]), (w_anode786w[1..1] & (! w_data714w[1..1])), (w_anode786w[0..0] & w_data714w[0..0]), w_anode716w[2..2]);
	w_anode796w[] = ( (w_anode796w[2..2] & w_data714w[2..2]), (w_anode796w[1..1] & w_data714w[1..1]), (w_anode796w[0..0] & (! w_data714w[0..0])), w_anode716w[2..2]);
	w_anode806w[] = ( (w_anode806w[2..2] & w_data714w[2..2]), (w_anode806w[1..1] & w_data714w[1..1]), (w_anode806w[0..0] & w_data714w[0..0]), w_anode716w[2..2]);
	w_anode818w[] = ( (w_anode818w[1..1] & (! data_wire[4..4])), (w_anode818w[0..0] & data_wire[3..3]), enable_wire);
	w_anode827w[] = ( (w_anode827w[2..2] & (! w_data714w[2..2])), (w_anode827w[1..1] & (! w_data714w[1..1])), (w_anode827w[0..0] & (! w_data714w[0..0])), w_anode818w[2..2]);
	w_anode838w[] = ( (w_anode838w[2..2] & (! w_data714w[2..2])), (w_anode838w[1..1] & (! w_data714w[1..1])), (w_anode838w[0..0] & w_data714w[0..0]), w_anode818w[2..2]);
	w_anode848w[] = ( (w_anode848w[2..2] & (! w_data714w[2..2])), (w_anode848w[1..1] & w_data714w[1..1]), (w_anode848w[0..0] & (! w_data714w[0..0])), w_anode818w[2..2]);
	w_anode858w[] = ( (w_anode858w[2..2] & (! w_data714w[2..2])), (w_anode858w[1..1] & w_data714w[1..1]), (w_anode858w[0..0] & w_data714w[0..0]), w_anode818w[2..2]);
	w_anode868w[] = ( (w_anode868w[2..2] & w_data714w[2..2]), (w_anode868w[1..1] & (! w_data714w[1..1])), (w_anode868w[0..0] & (! w_data714w[0..0])), w_anode818w[2..2]);
	w_anode878w[] = ( (w_anode878w[2..2] & w_data714w[2..2]), (w_anode878w[1..1] & (! w_data714w[1..1])), (w_anode878w[0..0] & w_data714w[0..0]), w_anode818w[2..2]);
	w_anode888w[] = ( (w_anode888w[2..2] & w_data714w[2..2]), (w_anode888w[1..1] & w_data714w[1..1]), (w_anode888w[0..0] & (! w_data714w[0..0])), w_anode818w[2..2]);
	w_anode898w[] = ( (w_anode898w[2..2] & w_data714w[2..2]), (w_anode898w[1..1] & w_data714w[1..1]), (w_anode898w[0..0] & w_data714w[0..0]), w_anode818w[2..2]);
	w_anode909w[] = ( (w_anode909w[1..1] & data_wire[4..4]), (w_anode909w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode918w[] = ( (w_anode918w[2..2] & (! w_data714w[2..2])), (w_anode918w[1..1] & (! w_data714w[1..1])), (w_anode918w[0..0] & (! w_data714w[0..0])), w_anode909w[2..2]);
	w_anode929w[] = ( (w_anode929w[2..2] & (! w_data714w[2..2])), (w_anode929w[1..1] & (! w_data714w[1..1])), (w_anode929w[0..0] & w_data714w[0..0]), w_anode909w[2..2]);
	w_anode939w[] = ( (w_anode939w[2..2] & (! w_data714w[2..2])), (w_anode939w[1..1] & w_data714w[1..1]), (w_anode939w[0..0] & (! w_data714w[0..0])), w_anode909w[2..2]);
	w_anode949w[] = ( (w_anode949w[2..2] & (! w_data714w[2..2])), (w_anode949w[1..1] & w_data714w[1..1]), (w_anode949w[0..0] & w_data714w[0..0]), w_anode909w[2..2]);
	w_anode959w[] = ( (w_anode959w[2..2] & w_data714w[2..2]), (w_anode959w[1..1] & (! w_data714w[1..1])), (w_anode959w[0..0] & (! w_data714w[0..0])), w_anode909w[2..2]);
	w_anode969w[] = ( (w_anode969w[2..2] & w_data714w[2..2]), (w_anode969w[1..1] & (! w_data714w[1..1])), (w_anode969w[0..0] & w_data714w[0..0]), w_anode909w[2..2]);
	w_anode979w[] = ( (w_anode979w[2..2] & w_data714w[2..2]), (w_anode979w[1..1] & w_data714w[1..1]), (w_anode979w[0..0] & (! w_data714w[0..0])), w_anode909w[2..2]);
	w_anode989w[] = ( (w_anode989w[2..2] & w_data714w[2..2]), (w_anode989w[1..1] & w_data714w[1..1]), (w_anode989w[0..0] & w_data714w[0..0]), w_anode909w[2..2]);
	w_data714w[2..0] = data_wire[2..0];
END;
--VALID FILE
